version: '3.8'

services:
  speaker-isolation:
    build:
      context: .
      target: production
    container_name: speaker-isolation-system
    ports:
      - "8000:8000"
      - "8001:8001"
    volumes:
      - ./data:/app/data
      - ./pretrained_models:/app/pretrained_models
      - ./config.yaml:/app/config.yaml
    environment:
      - PYTHONPATH=/app/src
      - CUDA_VISIBLE_DEVICES=0  # Use first GPU if available
    devices:
      - /dev/snd:/dev/snd  # Audio devices
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Add a reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: speaker-isolation-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro  # SSL certificates
    depends_on:
      - speaker-isolation
    restart: unless-stopped
    profiles:
      - production

  # Optional: Add a database for persistent storage
  postgres:
    image: postgres:15-alpine
    container_name: speaker-isolation-db
    environment:
      POSTGRES_DB: speaker_isolation
      POSTGRES_USER: app_user
      POSTGRES_PASSWORD: secure_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    profiles:
      - database

volumes:
  postgres_data:
